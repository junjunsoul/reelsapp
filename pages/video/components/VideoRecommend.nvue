<template>
	<view class="VideoRecommend" :class="{ active: show }" :style="[{ height: winHeight + 'px' }]" @click="$emit('close')">
		<view class="popup" :style="[{ height: winHeight * 0.65 + 'px' }]" @click.stop="">
			<view class="p_head">
				<text class="text">本剧已播放完毕，感谢您的支持</text>
			</view>
			<view class="p_content">
				<waterfall column-count="3" column-width="auto" column-gap="15" left-gap="15" right-gap="15" :show-scrollbar="false">
				    <cell v-for="(item, index) in data" :key="item.id">
						<view class="item" :class="{ active: currentIndex == index }" @click="playerVideo(item.id)">
							<image class="cover" :src="item.image" mode="aspectFill"></image>
							<text class="info" :style="[{ width: (winWidth - 60) / 3 + 'px' }]">{{ item.title }}</text>							
						</view>
				    </cell>
				</waterfall>
			</view>
		</view>
	</view>
</template>

<script>
	export default {
		name: "VideoRecommendNvue",
		props: {
			show: {
				type: Boolean,
				default: false
			},
		},
		data() {
			return {
				winWidth: 0,
				winHeight: 0,
				data: []
			};
		},
		watch: {
			
		},
		created() {
			this.getVideoList()
		},
		mounted() {
			this.winWidth = uni.getSystemInfoSync().windowWidth
			this.winHeight = uni.getSystemInfoSync().windowHeight
		},
		methods: {
			playerVideo(id) {
				uni.redirectTo({
					url: '/pages/video/play?id=' + id
				})
			},
			// 获取推荐视频
			getVideoList() {
				const obj = {
					type: 'recommend',
					pagesize: 9
				}
				getApp().request('video.list', obj).then(res => {
					if(res.code === 1) {
						if(res.data && res.data.length) {
							this.data = res.data
						}
					}
				})
			},
		}
	}
</script>

<style lang="scss" scoped>
	.VideoRecommend {
		width: 750rpx;
		position: absolute;
		bottom: 0;
		left: 0;
		z-index: 100;
		transition: transform 0.5s;
		transform: translateY(100%);
		
		&.active {
			transform: translateY(0);
		}
		
		.popup {
			width: 750rpx;
			background: #fff;
			border-radius: 20rpx 20rpx 0 0;
			position: absolute;
			bottom: 0;
			left: 0;
			z-index: 1;
			overflow: hidden;
			display: flex;
			flex-direction: column;
			
			.p_head {
				padding: 30rpx 40rpx;

				.text {
					font-weight: 700;
					line-height: 48rpx;
					color: #000;
					font-size: 32rpx;
					text-align: center;
				}
			}
			
			.p_content {
				flex: 1;
				padding: 20rpx 0;
				
				.item {
					position: relative;
					border-radius: 10rpx;
					overflow: hidden;
					margin-bottom: 30rpx;
					background: #f5f5f5;
					
					.cover {
						height: 276rpx;
						border-radius: 10rpx;
						overflow: hidden;
					}
					
					.info {
						padding: 8rpx;
						text-align: center;
						position: absolute;
						bottom: 0;
						left: 0;
						background: rgba(#000, 0.5);
						color: #fff;
						font-size: 28rpx;
						border-radius: 0 0 10rpx 10rpx;
						overflow: hidden;
					}
				}
			}
		}
	}
</style>